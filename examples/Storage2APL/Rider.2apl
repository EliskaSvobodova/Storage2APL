include: moving.2apl;


beliefs:
	prob(P) :- is(X, rand), X < P.


beliefupdates:
  { at(OLDPOS) }         UpdatePosition(POS)  { not at(OLDPOS), at(POS) }
  { true }               UpdatePosition(POS)  { at(POS) }


goals:
	wander.


plans:
	B(is( X, int( random( 15 ) ) ));
    B(is( Y, int( random( 15 ) ) ));
    @blockworld( enter( X, Y, orange ), _ );


pcrules:
	message( im, inform, La, On, stockProduct(Xb, Yb, Xs, Ys) ) <- true |
	{
		create(assigned_rider, ar);
		ar.adoptz(task(Xb, Yb, Xs, Ys));
		ar.execute(B(done(Xb, Yb, Xs, Ys)));
		release(ar);
		send(im, inform, done(Xb, Yb, Xs, Ys));
	}
	message( om, inform, La, On, takeProduct(Xb, Yb, Xs, Ys) ) <- true |
	{
		create(assigned_rider, ar);
		ar.adoptz(task2(Xb, Yb, Xs, Ys));
		ar.execute(B(done(Xb, Yb, Xs, Ys)));
		release(ar);
		send(im, inform, done(Xb, Yb, Xs, Ys));
	}


pgrules:
	wander <- prob(0.5) |
	{
		gotoRandomPos(15,15);
	}
	